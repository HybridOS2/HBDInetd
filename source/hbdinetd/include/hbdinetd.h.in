/*
** hbdinetd.h -- The main header of HBDInetd.
**
** Copyright (c) 2023 FMSoft (http://www.fmsoft.cn)
**
** Author: Vincent Wei (https://github.com/VincentWei)
**
** This file is part of HBDInetd.
**
** HBDInetd is free software: you can redistribute it and/or modify
** it under the terms of the GNU General Public License as published by
** the Free Software Foundation, either version 3 of the License, or
** (at your option) any later version.
**
** HBDInetd is distributed in the hope that it will be useful,
** but WITHOUT ANY WARRANTY; without even the implied warranty of
** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
** GNU General Public License for more details.
** You should have received a copy of the GNU General Public License
** along with this program.  If not, see http://www.gnu.org/licenses/.
*/

#ifndef __hbdinetd_h
#define __hbdinetd_h

#define HBDINETD_APP_NAME               "@PROJECT_APP_NAME@"
#define HBDINETD_RUN_MAIN               "main"
#define HBDINETD_RUN_CONFIG             "config"

#define HBDINETD_ALLOWED_HOSTS          "localhost"
#define HBDINETD_PRIVILEGED_APPS        "cn.fmsoft.hybridos.*"
#define HBDINETD_ANY_APPS               "*"

// global methods
#define METHOD_GLOBAL_TERMINATE         "terminate"

// methods for network devices
#define METHOD_NET_OPEN_DEVICE          "openDevice"
#define METHOD_NET_CLOSE_DEVICE         "closeDevice"
#define METHOD_NET_GET_DEVICE_STATUS    "getDeviceStatus"

// methods for WiFi device
#define METHOD_WIFI_START_SCAN          "wifiStartScan"
#define METHOD_WIFI_GET_HOTSPOTS        "wifiGetHotspotList"
#define METHOD_WIFI_STOP_SCAN           "wifiStopScan"
#define METHOD_WIFI_CONNECT_AP          "wifiConnect"
#define METHOD_WIFI_DISCONNECT_AP       "wifiDisconnect"
#define METHOD_WIFI_GET_NETWORK_INFO    "wifiGetNetworkInfo"

// method for wired device
// method for mobile device

// events for global state
#define BUBBLE_DEVICECHANGED                "DeviceChanged"
#define BUBBLE_DEVICECONFIGURED             "DeviceConfigured"
#define BUBBLE_DEVICECONFIGFAILED           "DeviceConfigFailed"

// events for WiFi device
#define BUBBLE_WIFICONNECTED                "WiFiConnected"
#define BUBBLE_WIFIFAILEDCONNATTEMPT        "WiFiFailedConnAttempt"
#define BUBBLE_WIFIDISCONNECTED             "WiFiDisconnected"
#define BUBBLE_WIFIHOTSPOTFOUND             "WiFiHotspotFound"
#define BUBBLE_WIFIHOTSPOTLOST              "WiFiHotspotLost"
#define BUBBLE_WIFISCANFINISHED             "WiFiScanFinished"
#define BUBBLE_WIFISIGNALLEVELCHANGED       "WiFiSignalLevelChanged"

// events for Ethernet Device
// events for Mobile Device

#define DEVICE_TYPE_ETHER_MASK      0x1000

// device type
enum {
#define DEVICE_TYPE_NAME_UNKNOWN            "unknown"
    DEVICE_TYPE_UNKNOWN = 0,
#define DEVICE_TYPE_NAME_LOOPBACK           "loopback"
    DEVICE_TYPE_LOOPBACK,
#define DEVICE_TYPE_NAME_MOBILE             "mobile"
    DEVICE_TYPE_MOBILE,
#define DEVICE_TYPE_NAME_ETHER_WIRED        "wired"
    DEVICE_TYPE_ETHER_WIRED = DEVICE_TYPE_ETHER_MASK | 0x00,
#define DEVICE_TYPE_NAME_ETHER_WIRELESS     "wifi"
    DEVICE_TYPE_ETHER_WIRELESS = DEVICE_TYPE_ETHER_MASK | 0x01,
};

// device status
enum {
#define DEVICE_STATUS_NAME_UNCERTAIN        "uncertain"
    DEVICE_STATUS_UNCERTAIN = 0,
#define DEVICE_STATUS_NAME_DOWN             "down"
    DEVICE_STATUS_DOWN,
#define DEVICE_STATUS_NAME_UP               "up"
    DEVICE_STATUS_UP,
#define DEVICE_STATUS_NAME_RUNNING          "running"
    DEVICE_STATUS_RUNNING
};

// errors
#define ERR_OK                          0
#define ERR_DATA_BUS                    -1
#define ERR_DEVICE_CONTROLLER           -2
#define ERR_TWO_MANY_FAILURES           -3
#define ERR_UNCERTAIN_RESULT            -4
#define ERR_WPA_INVALID_SSID            -5
#define ERR_WPA_INVALID_PASSPHRASE      -6
#define ERR_WPA_INVALID_KEYMGMT         -7
#define ERR_WPA_WRONG_PASSPHRASE        -8
#define ERR_TIMEOUT                     -9
#define ERR_UNRESOLVED_ATTEMPT          -10

// for network changed
#define NETWORK_CHANGED_NAME            ((0x01) << 0)
#define NETWORK_CHANGED_TYPE            ((0x01) << 1)
#define NETWORK_CHANGED_STATUS          ((0x01) << 2)
#define NETWORK_CHANGED_MAC             ((0x01) << 3)
#define NETWORK_CHANGED_IP              ((0x01) << 4)
#define NETWORK_CHANGED_BROADCAST       ((0x01) << 5)
#define NETWORK_CHANGED_SUBNETMASK      ((0x01) << 6)

// for string length
#define HOTSPOT_STRING_LENGTH           64
#define NETWORK_DEVICE_NAME_LENGTH      32
#define NETWORK_ADDRESS_LENGTH          32

#endif  // __hbdinetd__h
